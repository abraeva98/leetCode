Given a complete binary tree, count the number of nodes.

Note:

Definition of a complete binary tree from Wikipedia:
In a complete binary tree every level, except possibly the last, 
is completely filled, and all nodes in the last level are as far left as possible. 
It can have between 1 and 2h nodes inclusive at the last level h.

// solution 1
var countNodes = function(root) {
  if (!root) return 0;
  return countNodes(root.left) + countNodes(root.right) + 1;
}

// solution 2
var countNodes = function(root) {
  let leftNode = root;
  let rightNode = root;
  let leftHeight = 0;
  let rightHeight = 0;
  if (!root) return 0;
  while (leftNode !== null) {
      leftHeight ++;
      leftNode = leftNode.left;
  }
  while (rightNode !== null) {
      leftHeight ++;
      rightNode = rightNode.right;
  }
  if (leftHeight === rightHeight) return Math.pow(2, leftHeight); 
  return countNodes(root.left) + countNodes(root.right) + 1;
}
