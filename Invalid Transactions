// O(N^2) - time, O(N) - space

var invalidTransactions = function(transactions) {
    let info = [];
    
    for (let transaction of transactions) {
        let [name, time, amount, city] = transaction.split(',');
        info.push({name, time, amount, city, raw: transaction});
    }
    
    info.sort((a, b) => Number(a.time) - Number(b.time));
    
    let invalidIdx = new Set();
    let invalidTransactions = [];
    
    for (let i = 0; i < info.length; i ++) {
        if (info[i].amount > 1000) {
            if (!invalidIdx.has(i)) {
                invalidTransactions.push(info[i].raw);
                invalidIdx.add(i);
            }
        }
    }
    
    for (let i = 0; i < info.length - 1; i ++) {
        let curr = info[i];
        for (let next = i + 1; next < info.length; next ++) {
            if (info[next].time - curr.time > 60) break;
            if (info[next].name === curr.name && info[next].city !== curr.city) {
                if (!invalidIdx.has(i)) {
                    invalidTransactions.push(curr.raw);
                    invalidIdx.add(i);
                }
                if (!invalidIdx.has(next)) {
                    invalidTransactions.push(info[next].raw);
                    invalidIdx.add(next);
                }
            }
        }
    }
    return [...invalidTransactions];
};
