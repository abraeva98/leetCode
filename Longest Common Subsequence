// O(NM * min(N,M) - time, space

var longestCommonSubsequence = function(text1, text2) {
    let dp = [];
    for (let i = 0; i < text1.length + 1; i ++) {
        let row = new Array(text2.length + 1).fill([]);
        dp.push(row);
    }
    for (let i = 1; i <= text1.length; i ++) {
        for (let j = 1; j <= text2.length; j ++) {
            if (text1[i - 1] === text2[j - 1]) {
                dp[i][j] = dp[i - 1][j - 1].concat(text2[j - 1]);
            } else {
                dp[i][j] = dp[i - 1][j].length > dp[i][j - 1].length ? dp[i - 1][j] : dp[i][j - 1];
            }
        }
    }
    return dp[text1.length][text2.length].length;
};
