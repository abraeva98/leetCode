// O(N) - time, O(H) - space

var longestUnivaluePath = function(root) {
    if (!root) return root;
    let max = 0;
    function DFS(node) {
        if (!node) return;
        let left = DFS(node.left);
        let right = DFS(node.right);
        let leftSide = 0, rightSide = 0;
        if (node.left !== null && node.left.val === node.val) {
            leftSide = left + 1;
        }
        if (node.right !== null && node.right.val === node.val) {
            rightSide = right + 1;
        }
        max = Math.max(leftSide + rightSide, max);
        return Math.max(leftSide, rightSide)
        
    }
    DFS(root);
    return max;
};
