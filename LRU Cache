var LRUCache = function(capacity) {
    this.capacity = capacity;
    this.map = new Map();
};

LRUCache.prototype.get = function(key) {
    if (!this.map.has(key)) {
        return -1;
    } else {
        let value = this.map.get(key);
        this.map.delete(key);
        this.map.set(key, value);
        return this.map.get(key);
    } 
};

LRUCache.prototype.put = function(key, value) {
    if (this.map.has(key)) {
        this.map.delete(key);
    }
    this.map.set(key, value);
    if (this.map.size > this.capacity) {
        let keys = this.map.keys();
        this.map.delete(keys.next().value);
    }
};
