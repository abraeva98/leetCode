// O(N) - time, O(1) - space

function waterArea(heights) {
	if (heights.length === 0) return 0;
	
	let leftIdx = 0;
	let rightIdx = heights.length - 1;
	let leftMax = heights[leftIdx];
	let rightMax = heights[rightIdx];
	let water = 0;
	
	while (leftIdx < rightIdx) {
		if (heights[leftIdx] < heights[rightIdx]) {
			leftIdx ++;
			leftMax = Math.max(leftMax, heights[leftIdx]);
			water += leftMax - heights[leftIdx];
		} else {
			rightIdx --;
			rightMax = Math.max(rightMax, heights[rightIdx]);
			water += rightMax - heights[rightIdx];
		}
	}
	return water;
}

// O(N) - time, space

var trap = function(height) {
    /*
        create two arrays one for max from the left and
        one for max from the right, iterate through height 
        and choose the smallest of them, decrement the current
        height
    */
    let maxRight = new Array(height.length);
    maxRight[0] = height[0];
    for (let i = 1; i < height.length; i ++) {
        maxRight[i] = Math.max(maxRight[i - 1], height[i]);
    }
    
    let maxLeft = new Array(height.length);
    maxLeft[maxLeft.length - 1] = height[height.length - 1];
    for (let i = height.length - 2; i >= 0; i --) {
        maxLeft[i] = Math.max(maxLeft[i + 1], height[i]);
    }
    let water = 0;
    for (let i = 0; i < height.length; i ++) {
        let min = Math.min(maxRight[i], maxLeft[i]);
        water = water + min - height[i];
    }
    
    return water;
};

// tried to do it in 2024
var trap = function(height) {
    const n = height.length;
    let fromLeft = new Array(n);
    let maxSeenHeight = 0;
    for(let i = 0; i < n; i ++){
        let currHeight = height[i];
        maxSeenHeight = Math.max(currHeight, maxSeenHeight);
        fromLeft[i] = maxSeenHeight;
    }

    maxSeenHeight = 0;
    let fromRight = new Array(n);
    for(let j = n - 1; j >= 0; j --){
        let currHeight = height[j];
        maxSeenHeight = Math.max(currHeight, maxSeenHeight);
        fromRight[j] = maxSeenHeight;
    }

    let unitsOfRain = 0;
    for(i = 0; i < n; i ++){
        unitsOfRain += Math.min(fromLeft[i], fromRight[i]) - height[i];
    }
    return unitsOfRain;
};
