// O(N) - time, O(1) - space
var connect = function(root) {
    let head = root;
    while (head !== null) {
        let node = head;
        while (node !== null && node.left !== null) {
            node.left.next = node.right;
            node.right.next = node.next ? node.next.left : null;
            node = node.next;
        }
        head = head.left;
    }
    return root;
};

// O(N) - time, O(1) - space
var connect = function(root) {
    if (root === null || root.left === null) return root;
    root.left.next = root.right;
    root.right.next = root.next ? root.next.left : null;
    connect(root.left);
    connect(root.right);
    return root;
};


// O(N) - time, space
var connect = function(root) {
    if (root === null) return null;
    let queue = [root];
    while (queue.length > 0) {
        let next = [];
        while (queue.length > 0) {
            let node = queue.shift();
            node.next = queue[0] || null;
            if (node.left) {
                next.push(node.left);
                next.push(node.right);
            }
        }
       queue = next;
    }
    return root;
};
